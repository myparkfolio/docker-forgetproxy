#!/usr/bin/env bash

iptables_rules() {
    # private ip ranges are not intercepted
    iptables -t nat -$1 PREROUTING -i docker0 -d 10.0.0.0/8 -j RETURN
    iptables -t nat -$1 PREROUTING -i docker0 -d 127.0.0.0/8 -j RETURN
    iptables -t nat -$1 PREROUTING -i docker0 -d 169.254.0.0/16 -j RETURN
    iptables -t nat -$1 PREROUTING -i docker0 -d 172.16.0.0/12 -j RETURN
    iptables -t nat -$1 PREROUTING -i docker0 -d 192.168.0.0/16 -j RETURN
    iptables -t nat -$1 PREROUTING -i docker0 -d 224.0.0.0/4 -j RETURN
    iptables -t nat -$1 PREROUTING -i docker0 -d 240.0.0.0/4 -j RETURN

    iptables -t nat -$1 PREROUTING -p tcp --dport 80   -i docker0 -j REDIRECT --to 3128 2>/dev/null
    iptables -t nat -$1 PREROUTING -p tcp --dport 8080 -i docker0 -j REDIRECT --to 3128 2>/dev/null
}

append_squid_conf() {
  local host=$1
  local port=$2
  local local_port=$3
  local login=$4
  local password=$5

  local userpass="$login"

  if [ ! -z "$password" ] ; then
    userpass="$login:$password"
  fi

  if [ -z "$host" -o -z "$port" -o -z "$local_port" ] ; then
    echo missing required parameter >&2
    exit 1
  fi

  (cat <<EOF
  cache_peer $host parent $port 0 no-query default login=$userpass
  never_direct allow all
EOF
) >> /etc/squid/squid.conf
}

parse_host() {
  echo $1 | sed -nE "s/^(http(s)?:\/\/)?((.+):(.+)@)?(.+):([0-9]+)\/?$/\6/p"
}

parse_port() {
  echo $1 | sed -nE "s/^(http(s)?:\/\/)?((.+):(.+)@)?(.+):([0-9]+)\/?$/\7/p"
}

parse_login() {
  echo $1 | sed -nE "s/^(http(s)?:\/\/)?((.+):(.+)@)?(.+):([0-9]+)\/?$/\4/p"
}

parse_password() {
  echo $1 | sed -nE "s/^(http(s)?:\/\/)?((.+):(.+)@)?(.+):([0-9]+)\/?$/\5/p"
}

stop() {
    echo "Cleaning iptables"
    iptables_rules D
    pkill -9 squid
}

interrupted () {
    echo 'Interrupted, cleaning up...'
    trap - INT
    stop
    kill -INT $$
}

run() {
    trap interrupted INT
    trap terminated TERM SIGTERM

    if [ -z "$http_proxy" ]; then
        echo "No http_proxy set. Exiting"
        exit 1
    fi

    host=$(parse_host $http_proxy)
    port=$(parse_port $http_proxy)
    login=$(parse_login $http_proxy)
    password=$(parse_password $http_proxy)
    append_squid_conf $host $port "3128" $login $password

    iptables_rules A

    # -X verbose debug logging
    # -N Don't run in daemon mode - important for docker
    squid -N
    #tail -f /dev/null
    #tail -f /var/log/squid/access.log
}


terminated () {
    echo 'Terminated, cleaning up...'
    trap - TERM
    stop
    kill -TERM $$
}

case "$1" in
    stop )  stop ;;
    * )     run ;;
esac
